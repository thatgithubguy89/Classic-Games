@page "/rockpaperscissors"

<h1>@round</h1>
<div class="container w-75 mt-5">
    <div>
        @foreach (var img in imgList)
        {
            <img src="@img" width="100" height="100" style="display: block; cursor: pointer;" @onclick="@(() => PlayRound(@img))" />
        }
        <h4 class="mt-3">Player: &nbsp; @playerScore</h4>
    </div>
    <div class="float-end">
        <img src=@computerImage width="100" height="100" style="display: block;" />
        <h4>Computer: &nbsp; @computerScore</h4>
    </div>
</div>

@code {
    @inject NavigationManager _navManager;
    @inject IRockPaperScissorsRepository _rockPaperScissorsRepository;

    int playerScore = 0;
    int computerScore = 0;
    int round = 1;
    string computerImage = "images/blank.png";

    List<string> imgList = new List<string>() { "images/rock.png", "images/paper.png", "images/scissors.png" };
    List<string> selectionList = new List<string>() { "rock", "paper", "scissors" };

    private void PlayRound(string playerChoice)
    {
        playerChoice = _rockPaperScissorsRepository.PlayerSelection(playerChoice);

        string computerChoice = _rockPaperScissorsRepository.ComputerSelection();

        if ((playerChoice == "rock") && (computerChoice == "rock"))
        {
            computerImage = "images/rock.png";
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "rock") && (computerChoice == "paper"))
        {
            computerImage = "images/paper.png";
            computerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "rock") && (computerChoice == "scissors"))
        {
            computerImage = "images/scissors.png";
            playerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "paper") && (computerChoice == "rock"))
        {
            computerImage = "images/rock.png";
            playerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "paper") && (computerChoice == "paper"))
        {
            computerImage = "images/paper.png";
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "paper") && (computerChoice == "scissors"))
        {
            computerImage = "images/scissors.png";
            computerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "scissors") && (computerChoice == "rock"))
        {
            computerImage = "images/rock.png";
            computerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "scissors") && (computerChoice == "paper"))
        {
            computerImage = "images/paper.png";
            playerScore += 1;
            round++;
            CheckRound(round, playerScore, computerScore);
        }
        else if ((playerChoice == "scissors") && (computerChoice == "scissors"))
        {
            computerImage = "images/scissors.png";
            round++;
            CheckRound(round, playerScore, computerScore);
        }
    }

    private void CheckRound(int round, int playerScore, int computerScore)
    {
        if ((round == 4) && (playerScore > computerScore))
        {
            Thread.Sleep(1000);
            _navManager.NavigateTo("/rpsendscreen/player");
        }
        else if ((round == 4) && (playerScore < computerScore))
        {
            Thread.Sleep(1000);
            _navManager.NavigateTo("/rpsendscreen/computer");
        }
        else if ((round == 4) && (playerScore == computerScore))
        {
            Thread.Sleep(1000);
            _navManager.NavigateTo("/rpsendscreen/draw");
        }
    }
}
